def show_tasks(tasks):
    if not tasks:
        print("Your to-do list is empty.")
    else:
        for i, task in enumerate(tasks, 1):
            status = "Done" if task["completed"] else "Pending"
            print(f"{i}. {task['description']} - {status}")

def add_task(tasks):
    description = input("Enter task description: ")
    tasks.append({"description": description, "completed": False})
    print("Task added successfully!")

def mark_completed(tasks):
    show_tasks(tasks)
    if tasks:
        try:
            index = int(input("Enter the number of the task to mark as completed: ")) - 1
            if 0 <= index < len(tasks):
                tasks[index]["completed"] = True
                print("Task marked as completed!")
            else:
                print("Invalid task number.")
        except ValueError:
            print("Please enter a valid number.")

def remove_task(tasks):
    show_tasks(tasks)
    if tasks:
        try:
            index = int(input("Enter the number of the task to remove: ")) - 1
            if 0 <= index < len(tasks):
                removed_task = tasks.pop(index)
                print(f"Removed: {removed_task['description']}")
            else:
                print("Invalid task number.")
        except ValueError:
            print("Please enter a valid number.")

def main():
    tasks = []
    
    while True:
        print("\n--- To-Do List Manager ---")
        print("1. Show tasks")
        print("2. Add task")
        print("3. Task marked as completed")
        print("4. Remove task")
        print("5. Quit")
        
        choice = input("Enter your choice (1-5): ")
        
        if choice == '1':
            show_tasks(tasks)
        elif choice == '2':
            add_task(tasks)
        elif choice == '3':
            mark_completed(tasks)
        elif choice == '4':
            remove_task(tasks)
        elif choice == '5':
            print("Goodbye, Have a great day!")
            break
        else:
            print("Invalid choice. Please try again carefully.")

if _name_ == "_main_":
    main()
